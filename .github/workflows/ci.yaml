name: Django CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set environment variables
        run: echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV

      - name: Run tests
        run: |
          echo "Running tests (placeholder)"

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
        env:
          SSH_AUTH_SOCK: /tmp/ssh-agent.sock

      - name: Debug SSH agent
        run: |
          echo "Agent keys:"
          ssh-add -l || echo "No keys found in agent, error: $?"

      - name: Run Docker Compose on server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd ${{ secrets.DEPLOY_DIR }}
            # Устанавливаем Docker Compose, если его нет
            docker-compose --version || (echo "Docker Compose not found, installing..." && sudo apt update && sudo apt install -y docker-compose)
            # Останавливаем и удаляем старые контейнеры
            docker-compose down || true
            # Добавляем пользователя в группу docker для прав доступа
            sudo usermod -aG docker ${{ secrets.SSH_USER }}
            # Применяем изменения группы и выполняем команды
            newgrp docker << 'INNER_EOF'
              # Загружаем переменные из .env, если он существует
              if [ -f .env ]; then export $(cat .env | xargs); fi
              # Запускаем контейнеры в фоновом режиме
              docker-compose up -d
              echo "Deployment completed. Checking container status:"
              docker ps -a
            INNER_EOF
          EOF