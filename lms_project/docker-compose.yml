version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=${lms_db_new}
      - POSTGRES_USER=${postgres}
      - POSTGRES_PASSWORD=${123456}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A lms_project worker --loglevel=info --pool=solo
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_healthy

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A lms_project beat --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data: